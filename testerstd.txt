




/* ***************************************************** */
/*                                                       */
/*                   VECTOR < string >                   */
/*                                                       */
/* ***************************************************** */



TEST constructor vector() 

--------------------------------------------------------------------------------
size 	: 7
max_size: 288230376151711743
empty	: 0
content : b, d, e, a, c, ff, fff
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 6
max_size: 288230376151711743
empty	: 0
content : , , , , , 123
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 10
max_size: 288230376151711743
empty	: 0
content : b, a, b, d, e, a, c, ff, fff, f
--------------------------------------------------------------------------------




TEST insert(pos, cout, value) 

--------------------------------------------------------------------------------
size 	: 13
max_size: 288230376151711743
empty	: 0
content : 000, 000, 42, 42, b, d, e, a, c, ff, fff, 123, 123
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 288230376151711743
empty	: 0
content : zZz, 000, 42, 42, b, d, e, a, c, ff, fff, 123, 123
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 9
max_size: 288230376151711743
empty	: 0
content : 42, 42, b, d, e, a, c, ff, fff
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 288230376151711743
empty	: 0
content : zZz, 000, 42, 42, b, d, e, a, c, ff, fff, 123, 123
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 288230376151711743
empty	: 0
content : zZz123, 000, 42, 42, b, d, e, a, c, ff, fff, 123, 123
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 288230376151711743
empty	: 0
content : zZzaa123, 000, 42, 42, b, d, e, a, c, ff, fff, 123, 123
--------------------------------------------------------------------------------




TEST assign()

--------------------------------------------------------------------------------
size 	: 10
max_size: 288230376151711743
empty	: 0
content : 24, 24, 24, 24, 24, 24, 24, 24, 24, 24
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 288230376151711743
empty	: 0
content : 000, 000, 42, 42, b, d, e, a, c, ff, fff, 123, 123
--------------------------------------------------------------------------------




TEST operator []
stl_ref = r
stl_ref2 = bla
stl_cref = r
stl_cref2 = bli


TEST operator at()
stl_ref3 = m
stl_ref4 = bla
stl_cref3 = m
stl_cref4 = blibli


TEST front - back
stl_ref5 = cfront
stl_ref6 = cfront
stl_cref5 = cfront
stl_cref6 = cfront
stl_ref7 = cback
stl_ref8 = cback
stl_cref7 = cback
stl_cref8 = cback


TEST data
stl_ptr1 = cfront
stl_ptr2 = cfront
stl_cptr1 = cfront


TEST iterator 
stl_it = cfront
stl_it = cback
stl_it = b
stl_rit = cback
stl_rit = cfront
stl_rit = c


TEST capacity 
stl_bool = 0
stl_bool = 1
stl_size = 13
stl_size = 0
stl_size = 288230376151711743


TEST erase 

--------------------------------------------------------------------------------
size 	: 9
max_size: 288230376151711743
empty	: 0
content : 000, 42, e, a, c, ff, fff, 123, 123
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 0
max_size: 288230376151711743
empty	: 1
content : 
--------------------------------------------------------------------------------




TEST clear 

--------------------------------------------------------------------------------
size 	: 0
max_size: 288230376151711743
empty	: 1
content : 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 0
max_size: 288230376151711743
empty	: 1
content : 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 15
max_size: 288230376151711743
empty	: 0
content : , , , , , , , , , , 42, 42, 42, 42, 42
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 0
max_size: 288230376151711743
empty	: 1
content : 
--------------------------------------------------------------------------------




TEST Relational 
stl_vector10 == stl_vector11 : 1
stl_vector10 != stl_vector11 : 0
stl_vector10 < stl_vector11 : 0
stl_vector10 <= stl_vector11 : 1
stl_vector10 > stl_vector11 : 0
stl_vector10 >= stl_vector11 : 1
stl_vector10 == stl_vector11 : 0
stl_vector10 != stl_vector11 : 1
stl_vector10 < stl_vector11 : 0
stl_vector10 <= stl_vector11 : 0
stl_vector10 > stl_vector11 : 1
stl_vector10 >= stl_vector11 : 1
stl_vector10 == stl_vector11 : 0
stl_vector10 != stl_vector11 : 1
stl_vector10 < stl_vector11 : 0
stl_vector10 <= stl_vector11 : 0
stl_vector10 > stl_vector11 : 1
stl_vector10 >= stl_vector11 : 1


TEST Relation iterator 
stl_it == stl_it2 : 0
stl_it != stl_it2 : 1
stl_it < stl_it2 : 1
stl_it <= stl_it2 : 1
stl_it > stl_it2 : 0
stl_it >= stl_it2 : 0
stl_it == stl_it2 : 0
stl_it != stl_it2 : 1
stl_it < stl_it2 : 1
stl_it <= stl_it2 : 1
stl_it > stl_it2 : 0
stl_it >= stl_it2 : 0
stl_cit == stl_it2 : 0
stl_cit != stl_it2 : 1
stl_cit < stl_it2 : 1
stl_cit <= stl_it2 : 1
stl_cit > stl_it2 : 0
stl_cit >= stl_it2 : 0





/* ***************************************************** */
/*                                                       */
/*                    VECTOR < int >                     */
/*                                                       */
/* ***************************************************** */



TEST constructor vector() 

--------------------------------------------------------------------------------
size 	: 7
max_size: 2305843009213693951
empty	: 0
content : 50, 52, 53, 49, 51, 118, 192
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 6
max_size: 2305843009213693951
empty	: 0
content : 0, 0, 0, 0, 0, 36
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 10
max_size: 2305843009213693951
empty	: 0
content : 50, 49, 50, 52, 53, 49, 51, 118, 192, 54
--------------------------------------------------------------------------------




TEST insert(pos, cout, value) 

--------------------------------------------------------------------------------
size 	: 13
max_size: 2305843009213693951
empty	: 0
content : 30, 30, 16, 16, 50, 52, 53, 49, 51, 118, 192, 36, 36
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 2305843009213693951
empty	: 0
content : 220, 30, 16, 16, 50, 52, 53, 49, 51, 118, 192, 36, 36
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 9
max_size: 2305843009213693951
empty	: 0
content : 16, 16, 50, 52, 53, 49, 51, 118, 192
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 2305843009213693951
empty	: 0
content : 220, 30, 16, 16, 50, 52, 53, 49, 51, 118, 192, 36, 36
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 2305843009213693951
empty	: 0
content : 346, 30, 16, 16, 50, 52, 53, 49, 51, 118, 192, 36, 36
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 2305843009213693951
empty	: 0
content : 574, 30, 16, 16, 50, 52, 53, 49, 51, 118, 192, 36, 36
--------------------------------------------------------------------------------




TEST assign()

--------------------------------------------------------------------------------
size 	: 10
max_size: 2305843009213693951
empty	: 0
content : 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 2305843009213693951
empty	: 0
content : 30, 30, 16, 16, 50, 52, 53, 49, 51, 118, 192, 36, 36
--------------------------------------------------------------------------------




TEST operator []
stl_ref = 66
stl_ref2 = 189
stl_cref = 66
stl_cref2 = 197


TEST operator at()
stl_ref3 = 61
stl_ref4 = 189
stl_cref3 = 61
stl_cref4 = 484


TEST front - back
stl_ref5 = 514
stl_ref6 = 514
stl_cref5 = 514
stl_cref6 = 514
stl_ref7 = 360
stl_ref8 = 360
stl_cref7 = 360
stl_cref8 = 360


TEST data
stl_ptr1 = 514
stl_ptr2 = 514
stl_cptr1 = 514


TEST iterator 
stl_it = 514
stl_it = 360
stl_it = 50
stl_rit = 360
stl_rit = 514
stl_rit = 51


TEST capacity 
stl_bool = 0
stl_bool = 1
stl_size = 13
stl_size = 0
stl_size = 2305843009213693951


TEST erase 

--------------------------------------------------------------------------------
size 	: 9
max_size: 2305843009213693951
empty	: 0
content : 30, 16, 53, 49, 51, 118, 192, 36, 36
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 0
max_size: 2305843009213693951
empty	: 1
content : 
--------------------------------------------------------------------------------




TEST clear 

--------------------------------------------------------------------------------
size 	: 0
max_size: 2305843009213693951
empty	: 1
content : 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 0
max_size: 2305843009213693951
empty	: 1
content : 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 15
max_size: 2305843009213693951
empty	: 0
content : 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 16, 16, 16, 16
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 0
max_size: 2305843009213693951
empty	: 1
content : 
--------------------------------------------------------------------------------




TEST Relational 
stl_vector10 == stl_vector11 : 1
stl_vector10 != stl_vector11 : 0
stl_vector10 < stl_vector11 : 0
stl_vector10 <= stl_vector11 : 1
stl_vector10 > stl_vector11 : 0
stl_vector10 >= stl_vector11 : 1
stl_vector10 == stl_vector11 : 0
stl_vector10 != stl_vector11 : 1
stl_vector10 < stl_vector11 : 0
stl_vector10 <= stl_vector11 : 0
stl_vector10 > stl_vector11 : 1
stl_vector10 >= stl_vector11 : 1
stl_vector10 == stl_vector11 : 0
stl_vector10 != stl_vector11 : 1
stl_vector10 < stl_vector11 : 1
stl_vector10 <= stl_vector11 : 1
stl_vector10 > stl_vector11 : 0
stl_vector10 >= stl_vector11 : 0


TEST Relation iterator 
stl_it == stl_it2 : 0
stl_it != stl_it2 : 1
stl_it < stl_it2 : 1
stl_it <= stl_it2 : 1
stl_it > stl_it2 : 0
stl_it >= stl_it2 : 0
stl_it == stl_it2 : 0
stl_it != stl_it2 : 1
stl_it < stl_it2 : 1
stl_it <= stl_it2 : 1
stl_it > stl_it2 : 0
stl_it >= stl_it2 : 0
stl_cit == stl_it2 : 0
stl_cit != stl_it2 : 1
stl_cit < stl_it2 : 1
stl_cit <= stl_it2 : 1
stl_cit > stl_it2 : 0
stl_cit >= stl_it2 : 0





/* ***************************************************** */
/*                                                       */
/*                    VECTOR < char >                    */
/*                                                       */
/* ***************************************************** */



TEST constructor vector() 

--------------------------------------------------------------------------------
size 	: 7
max_size: 9223372036854775807
empty	: 0
content : b, d, e, a, c, f, f
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 6
max_size: 9223372036854775807
empty	: 0
content :  ,  ,  ,  ,  , 1
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 10
max_size: 9223372036854775807
empty	: 0
content : b, a, b, d, e, a, c, f, f, f
--------------------------------------------------------------------------------




TEST insert(pos, cout, value) 

--------------------------------------------------------------------------------
size 	: 13
max_size: 9223372036854775807
empty	: 0
content : 0, 0, 4, 4, b, d, e, a, c, f, f, 1, 1
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 9223372036854775807
empty	: 0
content : z, 0, 4, 4, b, d, e, a, c, f, f, 1, 1
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 9
max_size: 9223372036854775807
empty	: 0
content : 4, 4, b, d, e, a, c, f, f
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 9223372036854775807
empty	: 0
content : z, 0, 4, 4, b, d, e, a, c, f, f, 1, 1
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 9223372036854775807
empty	: 0
content : z, 0, 4, 4, b, d, e, a, c, f, f, 1, 1
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 9223372036854775807
empty	: 0
content : z, 0, 4, 4, b, d, e, a, c, f, f, 1, 1
--------------------------------------------------------------------------------




TEST assign()

--------------------------------------------------------------------------------
size 	: 10
max_size: 9223372036854775807
empty	: 0
content : 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 9223372036854775807
empty	: 0
content : 0, 0, 4, 4, b, d, e, a, c, f, f, 1, 1
--------------------------------------------------------------------------------




TEST operator []
stl_ref = r
stl_ref2 = b
stl_cref = r
stl_cref2 = b


TEST operator at()
stl_ref3 = m
stl_ref4 = b
stl_cref3 = m
stl_cref4 = b


TEST front - back
stl_ref5 = c
stl_ref6 = c
stl_cref5 = c
stl_cref6 = c
stl_ref7 = c
stl_ref8 = c
stl_cref7 = c
stl_cref8 = c


TEST data
stl_ptr1 = c
stl_ptr2 = c
stl_cptr1 = c


TEST iterator 
stl_it = c
stl_it = c
stl_it = b
stl_rit = c
stl_rit = c
stl_rit = c


TEST capacity 
stl_bool = 0
stl_bool = 1
stl_size = 13
stl_size = 0
stl_size = 9223372036854775807


TEST erase 

--------------------------------------------------------------------------------
size 	: 9
max_size: 9223372036854775807
empty	: 0
content : 0, 4, e, a, c, f, f, 1, 1
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 0
max_size: 9223372036854775807
empty	: 1
content : 
--------------------------------------------------------------------------------




TEST clear 

--------------------------------------------------------------------------------
size 	: 0
max_size: 9223372036854775807
empty	: 1
content : 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 0
max_size: 9223372036854775807
empty	: 1
content : 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 15
max_size: 9223372036854775807
empty	: 0
content :  ,  ,  ,  ,  ,  ,  ,  ,  ,  , 4, 4, 4, 4, 4
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 0
max_size: 9223372036854775807
empty	: 1
content : 
--------------------------------------------------------------------------------




TEST Relational 
stl_vector10 == stl_vector11 : 1
stl_vector10 != stl_vector11 : 0
stl_vector10 < stl_vector11 : 0
stl_vector10 <= stl_vector11 : 1
stl_vector10 > stl_vector11 : 0
stl_vector10 >= stl_vector11 : 1
stl_vector10 == stl_vector11 : 0
stl_vector10 != stl_vector11 : 1
stl_vector10 < stl_vector11 : 0
stl_vector10 <= stl_vector11 : 0
stl_vector10 > stl_vector11 : 1
stl_vector10 >= stl_vector11 : 1
stl_vector10 == stl_vector11 : 0
stl_vector10 != stl_vector11 : 1
stl_vector10 < stl_vector11 : 0
stl_vector10 <= stl_vector11 : 0
stl_vector10 > stl_vector11 : 1
stl_vector10 >= stl_vector11 : 1


TEST Relation iterator 
stl_it == stl_it2 : 0
stl_it != stl_it2 : 1
stl_it < stl_it2 : 1
stl_it <= stl_it2 : 1
stl_it > stl_it2 : 0
stl_it >= stl_it2 : 0
stl_it == stl_it2 : 0
stl_it != stl_it2 : 1
stl_it < stl_it2 : 1
stl_it <= stl_it2 : 1
stl_it > stl_it2 : 0
stl_it >= stl_it2 : 0
stl_cit == stl_it2 : 0
stl_cit != stl_it2 : 1
stl_cit < stl_it2 : 1
stl_cit <= stl_it2 : 1
stl_cit > stl_it2 : 0
stl_cit >= stl_it2 : 0





/* ***************************************************** */
/*                                                       */
/*                   VECTOR < float >                    */
/*                                                       */
/* ***************************************************** */



TEST constructor vector() 

--------------------------------------------------------------------------------
size 	: 7
max_size: 2305843009213693951
empty	: 0
content : 0, 0, 0, 0, 0, 0, 0
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 6
max_size: 2305843009213693951
empty	: 0
content : 0, 0, 0, 0, 0, 123
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 10
max_size: 2305843009213693951
empty	: 0
content : 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
--------------------------------------------------------------------------------




TEST insert(pos, cout, value) 

--------------------------------------------------------------------------------
size 	: 13
max_size: 2305843009213693951
empty	: 0
content : 0, 0, 42, 42, 0, 0, 0, 0, 0, 0, 0, 123, 123
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 2305843009213693951
empty	: 0
content : 0, 0, 42, 42, 0, 0, 0, 0, 0, 0, 0, 123, 123
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 9
max_size: 2305843009213693951
empty	: 0
content : 42, 42, 0, 0, 0, 0, 0, 0, 0
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 2305843009213693951
empty	: 0
content : 0, 0, 42, 42, 0, 0, 0, 0, 0, 0, 0, 123, 123
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 2305843009213693951
empty	: 0
content : 0, 0, 42, 42, 0, 0, 0, 0, 0, 0, 0, 123, 123
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 2305843009213693951
empty	: 0
content : 0, 0, 42, 42, 0, 0, 0, 0, 0, 0, 0, 123, 123
--------------------------------------------------------------------------------




TEST assign()

--------------------------------------------------------------------------------
size 	: 10
max_size: 2305843009213693951
empty	: 0
content : 24, 24, 24, 24, 24, 24, 24, 24, 24, 24
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 13
max_size: 2305843009213693951
empty	: 0
content : 0, 0, 42, 42, 0, 0, 0, 0, 0, 0, 0, 123, 123
--------------------------------------------------------------------------------




TEST operator []
stl_ref = 0
stl_ref2 = 0
stl_cref = 0
stl_cref2 = 0


TEST operator at()
stl_ref3 = 0
stl_ref4 = 0
stl_cref3 = 0
stl_cref4 = 0


TEST front - back
stl_ref5 = 0
stl_ref6 = 0
stl_cref5 = 0
stl_cref6 = 0
stl_ref7 = 0
stl_ref8 = 0
stl_cref7 = 0
stl_cref8 = 0


TEST data
stl_ptr1 = 0
stl_ptr2 = 0
stl_cptr1 = 0


TEST iterator 
stl_it = 0
stl_it = 0
stl_it = 0
stl_rit = 0
stl_rit = 0
stl_rit = 0


TEST capacity 
stl_bool = 0
stl_bool = 1
stl_size = 13
stl_size = 0
stl_size = 2305843009213693951


TEST erase 

--------------------------------------------------------------------------------
size 	: 9
max_size: 2305843009213693951
empty	: 0
content : 0, 42, 0, 0, 0, 0, 0, 123, 123
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 0
max_size: 2305843009213693951
empty	: 1
content : 
--------------------------------------------------------------------------------




TEST clear 

--------------------------------------------------------------------------------
size 	: 0
max_size: 2305843009213693951
empty	: 1
content : 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 0
max_size: 2305843009213693951
empty	: 1
content : 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 15
max_size: 2305843009213693951
empty	: 0
content : 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 42, 42, 42, 42
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
size 	: 0
max_size: 2305843009213693951
empty	: 1
content : 
--------------------------------------------------------------------------------




TEST Relational 
stl_vector10 == stl_vector11 : 1
stl_vector10 != stl_vector11 : 0
stl_vector10 < stl_vector11 : 0
stl_vector10 <= stl_vector11 : 1
stl_vector10 > stl_vector11 : 0
stl_vector10 >= stl_vector11 : 1
stl_vector10 == stl_vector11 : 0
stl_vector10 != stl_vector11 : 1
stl_vector10 < stl_vector11 : 0
stl_vector10 <= stl_vector11 : 0
stl_vector10 > stl_vector11 : 1
stl_vector10 >= stl_vector11 : 1
stl_vector10 == stl_vector11 : 0
stl_vector10 != stl_vector11 : 1
stl_vector10 < stl_vector11 : 1
stl_vector10 <= stl_vector11 : 1
stl_vector10 > stl_vector11 : 0
stl_vector10 >= stl_vector11 : 0


TEST Relation iterator 
stl_it == stl_it2 : 0
stl_it != stl_it2 : 1
stl_it < stl_it2 : 1
stl_it <= stl_it2 : 1
stl_it > stl_it2 : 0
stl_it >= stl_it2 : 0
stl_it == stl_it2 : 0
stl_it != stl_it2 : 1
stl_it < stl_it2 : 1
stl_it <= stl_it2 : 1
stl_it > stl_it2 : 0
stl_it >= stl_it2 : 0
stl_cit == stl_it2 : 0
stl_cit != stl_it2 : 1
stl_cit < stl_it2 : 1
stl_cit <= stl_it2 : 1
stl_cit > stl_it2 : 0
stl_cit >= stl_it2 : 0





/* ***************************************************** */
/*                                                       */
/*                  MAP < String, Int >                  */
/*                                                       */
/* ***************************************************** */

TEST constructor map() 
inserted : 1 (b, 2)
inserted : 1 (a, 1)
inserted : 1 (c, 3)
inserted : 1 (e, 5)
inserted : 1 (d, 4)
inserted : 0 (d, 4)
inserted : 0 (d, 4)

--------------------------------------------------------------------------------
map size : 20
a:1 b:2 c:3 d:4 e:5 f:54 g:55 h:56 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 t:68 
--------------------------------------------------------------------------------




TEST insert( hint, value )
inserted : A, 1
inserted : AA, 11
inserted : z, 1
inserted : z, 1
inserted : za, 1
inserted : c, 3

--------------------------------------------------------------------------------
map size : 24
A:1 AA:11 a:1 b:2 c:3 d:4 e:5 f:54 g:55 h:56 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 t:68 z:1 za:1 
--------------------------------------------------------------------------------




TEST insert( first, last )
A:1 AA:11 a:1 
--------------------------------------------------------------------------------
map size : 3
A:1 AA:11 a:1 
--------------------------------------------------------------------------------


A:1 AA:11 a:1 b:2 c:3 d:4 e:5 
--------------------------------------------------------------------------------
map size : 7
A:1 AA:11 a:1 b:2 c:3 d:4 e:5 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 7
A:1 AA:11 a:1 b:2 c:3 d:4 e:5 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 10
A:1 AA:11 a:1 b:2 c:3 d:4 e:5 t:68 z:1 za:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 24
A:1 AA:11 a:1 b:2 c:3 d:4 e:5 f:54 g:55 h:56 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 t:68 z:1 za:1 
--------------------------------------------------------------------------------




TEST iterator
begin : A, 1
begin++ : AA, 11
end-- : za, 1
end-- x2 : z, 1
A:1 AA:11 a:1 b:2 c:3 d:4 e:5 f:54 g:55 h:56 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 t:68 z:1 za:1 

TEST const iterator
cbegin : A, 1
const_it : A, 1
const_it : AA, 11
const_it : a, 1
const_it : za, 1
const_it : z, 1
cmap begin : A, 1
A:1 AA:11 a:1 b:2 c:3 d:4 e:5 f:54 g:55 h:56 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 t:68 z:1 za:1 

TEST reverse iterator
rbegin : za, 1
rend-- : A, 1
za:1 z:1 t:68 s:67 r:66 q:65 p:64 o:63 n:62 m:61 l:60 k:59 j:58 i:57 h:56 g:55 f:54 e:5 d:4 c:3 b:2 a:1 AA:11 A:1 

TEST const reverse iterator
crbegin : za, 1
crbegin : r, 66
crend-- : A, 1
za:1 z:1 t:68 s:67 r:66 q:65 p:64 o:63 n:62 m:61 l:60 k:59 j:58 i:57 h:56 g:55 f:54 e:5 d:4 c:3 b:2 a:1 AA:11 A:1 cmap crbegin : za, 1
cmap crbegin ++x5 : r, 66
cmap crend-- : A, 1
const map crit begin - end
za:1 z:1 t:68 s:67 r:66 q:65 p:64 o:63 n:62 m:61 l:60 k:59 j:58 i:57 h:56 g:55 f:54 e:5 d:4 c:3 b:2 a:1 AA:11 A:1 

TEST find(value)
find(a) : a, 1
find(za) : za, 1
find(inexist)	: not found
find(a) : a, 1
find(za) : za, 1


TEST erase(pos)

--------------------------------------------------------------------------------
map size : 23
AA:11 a:1 b:2 c:3 d:4 e:5 f:54 g:55 h:56 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 t:68 z:1 za:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 22
AA:11 a:1 b:2 c:3 d:4 e:5 f:54 g:55 h:56 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 t:68 z:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 21
AA:11 a:1 b:2 c:3 d:4 e:5 f:54 g:55 h:56 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 t:68 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 20
AA:11 a:1 b:2 c:3 e:5 f:54 g:55 h:56 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 t:68 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 19
a:1 b:2 c:3 e:5 f:54 g:55 h:56 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 t:68 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 18
a:1 b:2 e:5 f:54 g:55 h:56 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 t:68 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 17
a:1 b:2 e:5 f:54 g:55 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 t:68 
--------------------------------------------------------------------------------




TEST erase(first, last)

--------------------------------------------------------------------------------
map size : 16
b:2 e:5 f:54 g:55 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 t:68 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
b:2 e:5 f:54 g:55 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
b:2 e:5 f:54 g:55 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
b:2 e:5 f:54 g:55 i:57 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 12
b:2 e:5 j:58 k:59 l:60 m:61 n:62 o:63 p:64 q:65 r:66 s:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 10
b:2 e:5 j:58 k:59 l:60 o:63 p:64 q:65 r:66 s:67 
--------------------------------------------------------------------------------




TEST erase(key)
erase(w) : 0
erase(b) : 1
erase(e) : 1
erase(inexist) : 0


TEST swap()

--------------------------------------------------------------------------------
map size : 8
j:58 k:59 l:60 o:63 p:64 q:65 r:66 s:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
@:51 j:58 k:59 l:60 o:63 p:64 q:65 r:66 s:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 8
j:58 k:59 l:60 o:63 p:64 q:65 r:66 s:67 
--------------------------------------------------------------------------------




TEST constructor(first, last)

--------------------------------------------------------------------------------
map size : 9
@:51 j:58 k:59 l:60 o:63 p:64 q:65 r:66 s:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 2
@:51 j:58 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 5
k:59 l:60 o:63 p:64 q:65 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
@:51 j:58 k:59 l:60 o:63 p:64 q:65 r:66 s:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
@:51 j:58 k:59 l:60 o:63 p:64 q:65 r:66 s:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 5
k:59 l:60 o:63 p:64 q:65 
--------------------------------------------------------------------------------




TEST copy constructor

--------------------------------------------------------------------------------
map size : 9
@:51 j:58 k:59 l:60 o:63 p:64 q:65 r:66 s:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
@:51 j:58 k:59 l:60 o:63 p:64 q:65 r:66 s:67 
--------------------------------------------------------------------------------




TEST empty
empty_map.empty() : 1
map.empty() : 0
map_cp.empty() : 0
map_cp_cp.empty() : 0


TEST at
map.at(@) : 51
map.at(s) : 67
map.at(it_at->first) : 67


TEST []
map[@] : 51
map[s] : 67


TEST size - max_size
map.size() : 9
map.max_size() : 9
map_construct3.size() : 5
map_construct3.size() : 0
max size : 128102389400760775
max size : 128102389400760775
max size : 128102389400760775


TEST count
map.count(@) : 1
map.count(s) : 1
map.count(0) : 0
map.count(1) : 0


TEST equal_range()
map.equal_range(-10) first  : @ @
map.equal_range(-10) second : 51 51
map.equal_range(0) first  : @ @
map.equal_range(0) second : 51 51
map.equal_range(10) first  : @ @
map.equal_range(10) second : 51 51
map.equal_range(-10) first  : @ @
map.equal_range(-10) second : 51 51
map.equal_range(0) first  : @ @
map.equal_range(0) second : 51 51
map.equal_range(10) first  : @ @
map.equal_range(10) second : 51 51


TEST lower_bound()
map.lower_bound(-10) : @ 51
map.lower_bound(@) : @ 51
map.lower_bound(s) : s 67
map.lower_bound(0) : @ 51
map.lower_bound(10) : @ 51


TEST upper_bound()
map.upper_bound(-10) : @ 51
map.upper_bound(@) : j 58
map.upper_bound(r) : s 67


TEST key_comp()
map.key_comp()(a, b) : 1
map.key_comp()(b, a) : 0
map.key_comp()(a, a) : 0
map.key_comp()(b, b) : 0
map.key_comp()(abcdefghijklmnopqrstuvwxyz, abcdefghijklmnopqrstuvwxyz1) : 1


TEST value_comp()
map.value_comp()(a, b) : 1
map.value_comp()(b, a) : 0


TEST relational operation
map2 == map3 : 1
map2 != map3 : 0
map2 < map3 : 0
map2 > map3 : 0
map2 <= map3 : 1
map2 >= map3 : 1
map2 == map3 : 0
map2 != map3 : 1
map2 < map3 : 0
map2 > map3 : 1
map2 <= map3 : 0
map2 >= map3 : 1
map2 == map3 : 0
map2 != map3 : 1
map2 < map3 : 0
map2 > map3 : 1
map2 <= map3 : 0
map2 >= map3 : 1


TEST clear

--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------







/* ***************************************************** */
/*                                                       */
/*                  MAP < Int, String >                  */
/*                                                       */
/* ***************************************************** */

TEST constructor map() 
inserted : 1 (50, 2)
inserted : 1 (49, 1)
inserted : 1 (51, 3)
inserted : 1 (53, 5)
inserted : 1 (52, 4)
inserted : 0 (52, 4)
inserted : 0 (52, 4)

--------------------------------------------------------------------------------
map size : 20
49:1 50:2 51:3 52:4 53:5 54:f 55:g 56:h 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 68:t 
--------------------------------------------------------------------------------




TEST insert( hint, value )
inserted : 17, 1
inserted : 44, 10
inserted : 74, 1
inserted : 74, 1
inserted : 133, 1
inserted : 51, 3

--------------------------------------------------------------------------------
map size : 24
17:1 44:10 49:1 50:2 51:3 52:4 53:5 54:f 55:g 56:h 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 68:t 74:1 133:1 
--------------------------------------------------------------------------------




TEST insert( first, last )
17:1 44:10 49:1 
--------------------------------------------------------------------------------
map size : 3
17:1 44:10 49:1 
--------------------------------------------------------------------------------


17:1 44:10 49:1 50:2 51:3 52:4 53:5 
--------------------------------------------------------------------------------
map size : 7
17:1 44:10 49:1 50:2 51:3 52:4 53:5 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 7
17:1 44:10 49:1 50:2 51:3 52:4 53:5 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 10
17:1 44:10 49:1 50:2 51:3 52:4 53:5 68:t 74:1 133:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 24
17:1 44:10 49:1 50:2 51:3 52:4 53:5 54:f 55:g 56:h 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 68:t 74:1 133:1 
--------------------------------------------------------------------------------




TEST iterator
begin : 17, 1
begin++ : 44, 10
end-- : 133, 1
end-- x2 : 74, 1
17:1 44:10 49:1 50:2 51:3 52:4 53:5 54:f 55:g 56:h 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 68:t 74:1 133:1 

TEST const iterator
cbegin : 17, 1
const_it : 17, 1
const_it : 44, 10
const_it : 49, 1
const_it : 133, 1
const_it : 74, 1
cmap begin : 17, 1
17:1 44:10 49:1 50:2 51:3 52:4 53:5 54:f 55:g 56:h 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 68:t 74:1 133:1 

TEST reverse iterator
rbegin : 133, 1
rend-- : 17, 1
133:1 74:1 68:t 67:s 66:r 65:q 64:p 63:o 62:n 61:m 60:l 59:k 58:j 57:i 56:h 55:g 54:f 53:5 52:4 51:3 50:2 49:1 44:10 17:1 

TEST const reverse iterator
crbegin : 133, 1
crbegin : 66, r
crend-- : 17, 1
133:1 74:1 68:t 67:s 66:r 65:q 64:p 63:o 62:n 61:m 60:l 59:k 58:j 57:i 56:h 55:g 54:f 53:5 52:4 51:3 50:2 49:1 44:10 17:1 cmap crbegin : 133, 1
cmap crbegin ++x5 : 66, r
cmap crend-- : 17, 1
const map crit begin - end
133:1 74:1 68:t 67:s 66:r 65:q 64:p 63:o 62:n 61:m 60:l 59:k 58:j 57:i 56:h 55:g 54:f 53:5 52:4 51:3 50:2 49:1 44:10 17:1 

TEST find(value)
find(a) : 49, 1
find(za) : 133, 1
find(inexist)	: not found
find(a) : 49, 1
find(za) : 133, 1


TEST erase(pos)

--------------------------------------------------------------------------------
map size : 23
44:10 49:1 50:2 51:3 52:4 53:5 54:f 55:g 56:h 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 68:t 74:1 133:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 22
44:10 49:1 50:2 51:3 52:4 53:5 54:f 55:g 56:h 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 68:t 74:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 21
44:10 49:1 50:2 51:3 52:4 53:5 54:f 55:g 56:h 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 68:t 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 20
44:10 49:1 50:2 51:3 53:5 54:f 55:g 56:h 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 68:t 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 19
49:1 50:2 51:3 53:5 54:f 55:g 56:h 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 68:t 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 18
49:1 50:2 53:5 54:f 55:g 56:h 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 68:t 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 17
49:1 50:2 53:5 54:f 55:g 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 68:t 
--------------------------------------------------------------------------------




TEST erase(first, last)

--------------------------------------------------------------------------------
map size : 16
50:2 53:5 54:f 55:g 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 68:t 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
50:2 53:5 54:f 55:g 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
50:2 53:5 54:f 55:g 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
50:2 53:5 54:f 55:g 57:i 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 12
50:2 53:5 58:j 59:k 60:l 61:m 62:n 63:o 64:p 65:q 66:r 67:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 10
50:2 53:5 58:j 59:k 60:l 63:o 64:p 65:q 66:r 67:s 
--------------------------------------------------------------------------------




TEST erase(key)
erase(w) : 0
erase(b) : 1
erase(e) : 1
erase(inexist) : 0


TEST swap()

--------------------------------------------------------------------------------
map size : 8
58:j 59:k 60:l 63:o 64:p 65:q 66:r 67:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
16:777 58:j 59:k 60:l 63:o 64:p 65:q 66:r 67:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 8
58:j 59:k 60:l 63:o 64:p 65:q 66:r 67:s 
--------------------------------------------------------------------------------




TEST constructor(first, last)

--------------------------------------------------------------------------------
map size : 9
16:777 58:j 59:k 60:l 63:o 64:p 65:q 66:r 67:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 2
16:777 58:j 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 5
59:k 60:l 63:o 64:p 65:q 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
16:777 58:j 59:k 60:l 63:o 64:p 65:q 66:r 67:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
16:777 58:j 59:k 60:l 63:o 64:p 65:q 66:r 67:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 5
59:k 60:l 63:o 64:p 65:q 
--------------------------------------------------------------------------------




TEST copy constructor

--------------------------------------------------------------------------------
map size : 9
16:777 58:j 59:k 60:l 63:o 64:p 65:q 66:r 67:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
16:777 58:j 59:k 60:l 63:o 64:p 65:q 66:r 67:s 
--------------------------------------------------------------------------------




TEST empty
empty_map.empty() : 1
map.empty() : 0
map_cp.empty() : 0
map_cp_cp.empty() : 0


TEST at
map.at(@) : 777
map.at(s) : s
map.at(it_at->first) : s


TEST []
map[@] : 777
map[s] : s


TEST size - max_size
map.size() : 9
map.max_size() : 9
map_construct3.size() : 5
map_construct3.size() : 0
max size : 128102389400760775
max size : 128102389400760775
max size : 128102389400760775


TEST count
map.count(@) : 1
map.count(s) : 1
map.count(0) : 0
map.count(1) : 0


TEST equal_range()
map.equal_range(-10) first  : 58 58
map.equal_range(-10) second : j j
map.equal_range(0) first  : 16 16
map.equal_range(0) second : 777 777
map.equal_range(10) first  : 16 16
map.equal_range(10) second : 777 777
map.equal_range(-10) first  : 58 58
map.equal_range(-10) second : j j
map.equal_range(0) first  : 16 16
map.equal_range(0) second : 777 777
map.equal_range(10) first  : 16 16
map.equal_range(10) second : 777 777


TEST lower_bound()
map.lower_bound(-10) : 58 j
map.lower_bound(@) : 16 777
map.lower_bound(s) : 67 s
map.lower_bound(0) : 16 777
map.lower_bound(10) : 16 777


TEST upper_bound()
map.upper_bound(-10) : 58 j
map.upper_bound(@) : 58 j
map.upper_bound(r) : 67 s


TEST key_comp()
map.key_comp()(a, b) : 1
map.key_comp()(b, a) : 0
map.key_comp()(a, a) : 0
map.key_comp()(b, b) : 0
map.key_comp()(abcdefghijklmnopqrstuvwxyz, abcdefghijklmnopqrstuvwxyz1) : 1


TEST value_comp()
map.value_comp()(a, b) : 1
map.value_comp()(b, a) : 0


TEST relational operation
map2 == map3 : 1
map2 != map3 : 0
map2 < map3 : 0
map2 > map3 : 0
map2 <= map3 : 1
map2 >= map3 : 1
map2 == map3 : 0
map2 != map3 : 1
map2 < map3 : 1
map2 > map3 : 0
map2 <= map3 : 1
map2 >= map3 : 0
map2 == map3 : 0
map2 != map3 : 1
map2 < map3 : 1
map2 > map3 : 0
map2 <= map3 : 1
map2 >= map3 : 0


TEST clear

--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------







/* ***************************************************** */
/*                                                       */
/*                MAP < String, String >                 */
/*                                                       */
/* ***************************************************** */

TEST constructor map() 
inserted : 1 (b, 2)
inserted : 1 (a, 1)
inserted : 1 (c, 3)
inserted : 1 (e, 5)
inserted : 1 (d, 4)
inserted : 0 (d, 4)
inserted : 0 (d, 4)

--------------------------------------------------------------------------------
map size : 20
a:1 b:2 c:3 d:4 e:5 f:f g:g h:h i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s t:t 
--------------------------------------------------------------------------------




TEST insert( hint, value )
inserted : A, 1
inserted : AA, 10
inserted : z, 1
inserted : z, 1
inserted : za, 1
inserted : c, 3

--------------------------------------------------------------------------------
map size : 24
A:1 AA:10 a:1 b:2 c:3 d:4 e:5 f:f g:g h:h i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s t:t z:1 za:1 
--------------------------------------------------------------------------------




TEST insert( first, last )
A:1 AA:10 a:1 
--------------------------------------------------------------------------------
map size : 3
A:1 AA:10 a:1 
--------------------------------------------------------------------------------


A:1 AA:10 a:1 b:2 c:3 d:4 e:5 
--------------------------------------------------------------------------------
map size : 7
A:1 AA:10 a:1 b:2 c:3 d:4 e:5 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 7
A:1 AA:10 a:1 b:2 c:3 d:4 e:5 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 10
A:1 AA:10 a:1 b:2 c:3 d:4 e:5 t:t z:1 za:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 24
A:1 AA:10 a:1 b:2 c:3 d:4 e:5 f:f g:g h:h i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s t:t z:1 za:1 
--------------------------------------------------------------------------------




TEST iterator
begin : A, 1
begin++ : AA, 10
end-- : za, 1
end-- x2 : z, 1
A:1 AA:10 a:1 b:2 c:3 d:4 e:5 f:f g:g h:h i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s t:t z:1 za:1 

TEST const iterator
cbegin : A, 1
const_it : A, 1
const_it : AA, 10
const_it : a, 1
const_it : za, 1
const_it : z, 1
cmap begin : A, 1
A:1 AA:10 a:1 b:2 c:3 d:4 e:5 f:f g:g h:h i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s t:t z:1 za:1 

TEST reverse iterator
rbegin : za, 1
rend-- : A, 1
za:1 z:1 t:t s:s r:r q:q p:p o:o n:n m:m l:l k:k j:j i:i h:h g:g f:f e:5 d:4 c:3 b:2 a:1 AA:10 A:1 

TEST const reverse iterator
crbegin : za, 1
crbegin : r, r
crend-- : A, 1
za:1 z:1 t:t s:s r:r q:q p:p o:o n:n m:m l:l k:k j:j i:i h:h g:g f:f e:5 d:4 c:3 b:2 a:1 AA:10 A:1 cmap crbegin : za, 1
cmap crbegin ++x5 : r, r
cmap crend-- : A, 1
const map crit begin - end
za:1 z:1 t:t s:s r:r q:q p:p o:o n:n m:m l:l k:k j:j i:i h:h g:g f:f e:5 d:4 c:3 b:2 a:1 AA:10 A:1 

TEST find(value)
find(a) : a, 1
find(za) : za, 1
find(inexist)	: not found
find(a) : a, 1
find(za) : za, 1


TEST erase(pos)

--------------------------------------------------------------------------------
map size : 23
AA:10 a:1 b:2 c:3 d:4 e:5 f:f g:g h:h i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s t:t z:1 za:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 22
AA:10 a:1 b:2 c:3 d:4 e:5 f:f g:g h:h i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s t:t z:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 21
AA:10 a:1 b:2 c:3 d:4 e:5 f:f g:g h:h i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s t:t 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 20
AA:10 a:1 b:2 c:3 e:5 f:f g:g h:h i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s t:t 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 19
a:1 b:2 c:3 e:5 f:f g:g h:h i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s t:t 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 18
a:1 b:2 e:5 f:f g:g h:h i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s t:t 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 17
a:1 b:2 e:5 f:f g:g i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s t:t 
--------------------------------------------------------------------------------




TEST erase(first, last)

--------------------------------------------------------------------------------
map size : 16
b:2 e:5 f:f g:g i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s t:t 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
b:2 e:5 f:f g:g i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
b:2 e:5 f:f g:g i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
b:2 e:5 f:f g:g i:i j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 12
b:2 e:5 j:j k:k l:l m:m n:n o:o p:p q:q r:r s:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 10
b:2 e:5 j:j k:k l:l o:o p:p q:q r:r s:s 
--------------------------------------------------------------------------------




TEST erase(key)
erase(w) : 0
erase(b) : 1
erase(e) : 1
erase(inexist) : 0


TEST swap()

--------------------------------------------------------------------------------
map size : 8
j:j k:k l:l o:o p:p q:q r:r s:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
@:777 j:j k:k l:l o:o p:p q:q r:r s:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 8
j:j k:k l:l o:o p:p q:q r:r s:s 
--------------------------------------------------------------------------------




TEST constructor(first, last)

--------------------------------------------------------------------------------
map size : 9
@:777 j:j k:k l:l o:o p:p q:q r:r s:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 2
@:777 j:j 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 5
k:k l:l o:o p:p q:q 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
@:777 j:j k:k l:l o:o p:p q:q r:r s:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
@:777 j:j k:k l:l o:o p:p q:q r:r s:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 5
k:k l:l o:o p:p q:q 
--------------------------------------------------------------------------------




TEST copy constructor

--------------------------------------------------------------------------------
map size : 9
@:777 j:j k:k l:l o:o p:p q:q r:r s:s 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
@:777 j:j k:k l:l o:o p:p q:q r:r s:s 
--------------------------------------------------------------------------------




TEST empty
empty_map.empty() : 1
map.empty() : 0
map_cp.empty() : 0
map_cp_cp.empty() : 0


TEST at
map.at(@) : 777
map.at(s) : s
map.at(it_at->first) : s


TEST []
map[@] : 777
map[s] : s


TEST size - max_size
map.size() : 9
map.max_size() : 9
map_construct3.size() : 5
map_construct3.size() : 0
max size : 96076792050570581
max size : 96076792050570581
max size : 96076792050570581


TEST count
map.count(@) : 1
map.count(s) : 1
map.count(0) : 0
map.count(1) : 0


TEST equal_range()
map.equal_range(-10) first  : @ @
map.equal_range(-10) second : 777 777
map.equal_range(0) first  : @ @
map.equal_range(0) second : 777 777
map.equal_range(10) first  : @ @
map.equal_range(10) second : 777 777
map.equal_range(-10) first  : @ @
map.equal_range(-10) second : 777 777
map.equal_range(0) first  : @ @
map.equal_range(0) second : 777 777
map.equal_range(10) first  : @ @
map.equal_range(10) second : 777 777


TEST lower_bound()
map.lower_bound(-10) : @ 777
map.lower_bound(@) : @ 777
map.lower_bound(s) : s s
map.lower_bound(0) : @ 777
map.lower_bound(10) : @ 777


TEST upper_bound()
map.upper_bound(-10) : @ 777
map.upper_bound(@) : j j
map.upper_bound(r) : s s


TEST key_comp()
map.key_comp()(a, b) : 1
map.key_comp()(b, a) : 0
map.key_comp()(a, a) : 0
map.key_comp()(b, b) : 0
map.key_comp()(abcdefghijklmnopqrstuvwxyz, abcdefghijklmnopqrstuvwxyz1) : 1


TEST value_comp()
map.value_comp()(a, b) : 1
map.value_comp()(b, a) : 0


TEST relational operation
map2 == map3 : 1
map2 != map3 : 0
map2 < map3 : 0
map2 > map3 : 0
map2 <= map3 : 1
map2 >= map3 : 1
map2 == map3 : 0
map2 != map3 : 1
map2 < map3 : 0
map2 > map3 : 1
map2 <= map3 : 0
map2 >= map3 : 1
map2 == map3 : 0
map2 != map3 : 1
map2 < map3 : 0
map2 > map3 : 1
map2 <= map3 : 0
map2 >= map3 : 1


TEST clear

--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------







/* ***************************************************** */
/*                                                       */
/*                   MAP < Int, Int >                    */
/*                                                       */
/* ***************************************************** */

TEST constructor map() 
inserted : 1 (50, 2)
inserted : 1 (49, 1)
inserted : 1 (51, 3)
inserted : 1 (53, 5)
inserted : 1 (52, 4)
inserted : 0 (52, 4)
inserted : 0 (52, 4)

--------------------------------------------------------------------------------
map size : 20
49:1 50:2 51:3 52:4 53:5 54:54 55:55 56:56 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 68:68 
--------------------------------------------------------------------------------




TEST insert( hint, value )
inserted : 17, 1
inserted : 44, 11
inserted : 74, 1
inserted : 74, 1
inserted : 133, 1
inserted : 51, 3

--------------------------------------------------------------------------------
map size : 24
17:1 44:11 49:1 50:2 51:3 52:4 53:5 54:54 55:55 56:56 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 68:68 74:1 133:1 
--------------------------------------------------------------------------------




TEST insert( first, last )
17:1 44:11 49:1 
--------------------------------------------------------------------------------
map size : 3
17:1 44:11 49:1 
--------------------------------------------------------------------------------


17:1 44:11 49:1 50:2 51:3 52:4 53:5 
--------------------------------------------------------------------------------
map size : 7
17:1 44:11 49:1 50:2 51:3 52:4 53:5 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 7
17:1 44:11 49:1 50:2 51:3 52:4 53:5 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 10
17:1 44:11 49:1 50:2 51:3 52:4 53:5 68:68 74:1 133:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 24
17:1 44:11 49:1 50:2 51:3 52:4 53:5 54:54 55:55 56:56 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 68:68 74:1 133:1 
--------------------------------------------------------------------------------




TEST iterator
begin : 17, 1
begin++ : 44, 11
end-- : 133, 1
end-- x2 : 74, 1
17:1 44:11 49:1 50:2 51:3 52:4 53:5 54:54 55:55 56:56 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 68:68 74:1 133:1 

TEST const iterator
cbegin : 17, 1
const_it : 17, 1
const_it : 44, 11
const_it : 49, 1
const_it : 133, 1
const_it : 74, 1
cmap begin : 17, 1
17:1 44:11 49:1 50:2 51:3 52:4 53:5 54:54 55:55 56:56 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 68:68 74:1 133:1 

TEST reverse iterator
rbegin : 133, 1
rend-- : 17, 1
133:1 74:1 68:68 67:67 66:66 65:65 64:64 63:63 62:62 61:61 60:60 59:59 58:58 57:57 56:56 55:55 54:54 53:5 52:4 51:3 50:2 49:1 44:11 17:1 

TEST const reverse iterator
crbegin : 133, 1
crbegin : 66, 66
crend-- : 17, 1
133:1 74:1 68:68 67:67 66:66 65:65 64:64 63:63 62:62 61:61 60:60 59:59 58:58 57:57 56:56 55:55 54:54 53:5 52:4 51:3 50:2 49:1 44:11 17:1 cmap crbegin : 133, 1
cmap crbegin ++x5 : 66, 66
cmap crend-- : 17, 1
const map crit begin - end
133:1 74:1 68:68 67:67 66:66 65:65 64:64 63:63 62:62 61:61 60:60 59:59 58:58 57:57 56:56 55:55 54:54 53:5 52:4 51:3 50:2 49:1 44:11 17:1 

TEST find(value)
find(a) : 49, 1
find(za) : 133, 1
find(inexist)	: not found
find(a) : 49, 1
find(za) : 133, 1


TEST erase(pos)

--------------------------------------------------------------------------------
map size : 23
44:11 49:1 50:2 51:3 52:4 53:5 54:54 55:55 56:56 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 68:68 74:1 133:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 22
44:11 49:1 50:2 51:3 52:4 53:5 54:54 55:55 56:56 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 68:68 74:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 21
44:11 49:1 50:2 51:3 52:4 53:5 54:54 55:55 56:56 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 68:68 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 20
44:11 49:1 50:2 51:3 53:5 54:54 55:55 56:56 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 68:68 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 19
49:1 50:2 51:3 53:5 54:54 55:55 56:56 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 68:68 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 18
49:1 50:2 53:5 54:54 55:55 56:56 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 68:68 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 17
49:1 50:2 53:5 54:54 55:55 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 68:68 
--------------------------------------------------------------------------------




TEST erase(first, last)

--------------------------------------------------------------------------------
map size : 16
50:2 53:5 54:54 55:55 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 68:68 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
50:2 53:5 54:54 55:55 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
50:2 53:5 54:54 55:55 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
50:2 53:5 54:54 55:55 57:57 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 12
50:2 53:5 58:58 59:59 60:60 61:61 62:62 63:63 64:64 65:65 66:66 67:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 10
50:2 53:5 58:58 59:59 60:60 63:63 64:64 65:65 66:66 67:67 
--------------------------------------------------------------------------------




TEST erase(key)
erase(w) : 0
erase(b) : 1
erase(e) : 1
erase(inexist) : 0


TEST swap()

--------------------------------------------------------------------------------
map size : 8
58:58 59:59 60:60 63:63 64:64 65:65 66:66 67:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
16:51 58:58 59:59 60:60 63:63 64:64 65:65 66:66 67:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 8
58:58 59:59 60:60 63:63 64:64 65:65 66:66 67:67 
--------------------------------------------------------------------------------




TEST constructor(first, last)

--------------------------------------------------------------------------------
map size : 9
16:51 58:58 59:59 60:60 63:63 64:64 65:65 66:66 67:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 2
16:51 58:58 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 5
59:59 60:60 63:63 64:64 65:65 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
16:51 58:58 59:59 60:60 63:63 64:64 65:65 66:66 67:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
16:51 58:58 59:59 60:60 63:63 64:64 65:65 66:66 67:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 5
59:59 60:60 63:63 64:64 65:65 
--------------------------------------------------------------------------------




TEST copy constructor

--------------------------------------------------------------------------------
map size : 9
16:51 58:58 59:59 60:60 63:63 64:64 65:65 66:66 67:67 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
16:51 58:58 59:59 60:60 63:63 64:64 65:65 66:66 67:67 
--------------------------------------------------------------------------------




TEST empty
empty_map.empty() : 1
map.empty() : 0
map_cp.empty() : 0
map_cp_cp.empty() : 0


TEST at
map.at(@) : 51
map.at(s) : 67
map.at(it_at->first) : 67


TEST []
map[@] : 51
map[s] : 67


TEST size - max_size
map.size() : 9
map.max_size() : 9
map_construct3.size() : 5
map_construct3.size() : 0
max size : 230584300921369395
max size : 230584300921369395
max size : 230584300921369395


TEST count
map.count(@) : 1
map.count(s) : 1
map.count(0) : 0
map.count(1) : 0


TEST equal_range()
map.equal_range(-10) first  : 58 58
map.equal_range(-10) second : 58 58
map.equal_range(0) first  : 16 16
map.equal_range(0) second : 51 51
map.equal_range(10) first  : 16 16
map.equal_range(10) second : 51 51
map.equal_range(-10) first  : 58 58
map.equal_range(-10) second : 58 58
map.equal_range(0) first  : 16 16
map.equal_range(0) second : 51 51
map.equal_range(10) first  : 16 16
map.equal_range(10) second : 51 51


TEST lower_bound()
map.lower_bound(-10) : 58 58
map.lower_bound(@) : 16 51
map.lower_bound(s) : 67 67
map.lower_bound(0) : 16 51
map.lower_bound(10) : 16 51


TEST upper_bound()
map.upper_bound(-10) : 58 58
map.upper_bound(@) : 58 58
map.upper_bound(r) : 67 67


TEST key_comp()
map.key_comp()(a, b) : 1
map.key_comp()(b, a) : 0
map.key_comp()(a, a) : 0
map.key_comp()(b, b) : 0
map.key_comp()(abcdefghijklmnopqrstuvwxyz, abcdefghijklmnopqrstuvwxyz1) : 1


TEST value_comp()
map.value_comp()(a, b) : 1
map.value_comp()(b, a) : 0


TEST relational operation
map2 == map3 : 1
map2 != map3 : 0
map2 < map3 : 0
map2 > map3 : 0
map2 <= map3 : 1
map2 >= map3 : 1
map2 == map3 : 0
map2 != map3 : 1
map2 < map3 : 1
map2 > map3 : 0
map2 <= map3 : 1
map2 >= map3 : 0
map2 == map3 : 0
map2 != map3 : 1
map2 < map3 : 1
map2 > map3 : 0
map2 <= map3 : 1
map2 >= map3 : 0


TEST clear

--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------







/* ***************************************************** */
/*                                                       */
/*                  MAP < Int, Float >                   */
/*                                                       */
/* ***************************************************** */

TEST constructor map() 
inserted : 1 (50, 2)
inserted : 1 (49, 1)
inserted : 1 (51, 3)
inserted : 1 (53, 5)
inserted : 1 (52, 4)
inserted : 0 (52, 4)
inserted : 0 (52, 4)

--------------------------------------------------------------------------------
map size : 20
49:1 50:2 51:3 52:4 53:5 54:0 55:0 56:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 68:0 
--------------------------------------------------------------------------------




TEST insert( hint, value )
inserted : 17, 1
inserted : 44, 10
inserted : 74, 1
inserted : 74, 1
inserted : 133, 1
inserted : 51, 3

--------------------------------------------------------------------------------
map size : 24
17:1 44:10 49:1 50:2 51:3 52:4 53:5 54:0 55:0 56:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 68:0 74:1 133:1 
--------------------------------------------------------------------------------




TEST insert( first, last )
17:1 44:10 49:1 
--------------------------------------------------------------------------------
map size : 3
17:1 44:10 49:1 
--------------------------------------------------------------------------------


17:1 44:10 49:1 50:2 51:3 52:4 53:5 
--------------------------------------------------------------------------------
map size : 7
17:1 44:10 49:1 50:2 51:3 52:4 53:5 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 7
17:1 44:10 49:1 50:2 51:3 52:4 53:5 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 10
17:1 44:10 49:1 50:2 51:3 52:4 53:5 68:0 74:1 133:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 24
17:1 44:10 49:1 50:2 51:3 52:4 53:5 54:0 55:0 56:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 68:0 74:1 133:1 
--------------------------------------------------------------------------------




TEST iterator
begin : 17, 1
begin++ : 44, 10
end-- : 133, 1
end-- x2 : 74, 1
17:1 44:10 49:1 50:2 51:3 52:4 53:5 54:0 55:0 56:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 68:0 74:1 133:1 

TEST const iterator
cbegin : 17, 1
const_it : 17, 1
const_it : 44, 10
const_it : 49, 1
const_it : 133, 1
const_it : 74, 1
cmap begin : 17, 1
17:1 44:10 49:1 50:2 51:3 52:4 53:5 54:0 55:0 56:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 68:0 74:1 133:1 

TEST reverse iterator
rbegin : 133, 1
rend-- : 17, 1
133:1 74:1 68:0 67:0 66:0 65:0 64:0 63:0 62:0 61:0 60:0 59:0 58:0 57:0 56:0 55:0 54:0 53:5 52:4 51:3 50:2 49:1 44:10 17:1 

TEST const reverse iterator
crbegin : 133, 1
crbegin : 66, 0
crend-- : 17, 1
133:1 74:1 68:0 67:0 66:0 65:0 64:0 63:0 62:0 61:0 60:0 59:0 58:0 57:0 56:0 55:0 54:0 53:5 52:4 51:3 50:2 49:1 44:10 17:1 cmap crbegin : 133, 1
cmap crbegin ++x5 : 66, 0
cmap crend-- : 17, 1
const map crit begin - end
133:1 74:1 68:0 67:0 66:0 65:0 64:0 63:0 62:0 61:0 60:0 59:0 58:0 57:0 56:0 55:0 54:0 53:5 52:4 51:3 50:2 49:1 44:10 17:1 

TEST find(value)
find(a) : 49, 1
find(za) : 133, 1
find(inexist)	: not found
find(a) : 49, 1
find(za) : 133, 1


TEST erase(pos)

--------------------------------------------------------------------------------
map size : 23
44:10 49:1 50:2 51:3 52:4 53:5 54:0 55:0 56:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 68:0 74:1 133:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 22
44:10 49:1 50:2 51:3 52:4 53:5 54:0 55:0 56:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 68:0 74:1 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 21
44:10 49:1 50:2 51:3 52:4 53:5 54:0 55:0 56:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 68:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 20
44:10 49:1 50:2 51:3 53:5 54:0 55:0 56:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 68:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 19
49:1 50:2 51:3 53:5 54:0 55:0 56:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 68:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 18
49:1 50:2 53:5 54:0 55:0 56:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 68:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 17
49:1 50:2 53:5 54:0 55:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 68:0 
--------------------------------------------------------------------------------




TEST erase(first, last)

--------------------------------------------------------------------------------
map size : 16
50:2 53:5 54:0 55:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 68:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
50:2 53:5 54:0 55:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
50:2 53:5 54:0 55:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 15
50:2 53:5 54:0 55:0 57:0 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 12
50:2 53:5 58:0 59:0 60:0 61:0 62:0 63:0 64:0 65:0 66:0 67:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 10
50:2 53:5 58:0 59:0 60:0 63:0 64:0 65:0 66:0 67:0 
--------------------------------------------------------------------------------




TEST erase(key)
erase(w) : 0
erase(b) : 1
erase(e) : 1
erase(inexist) : 0


TEST swap()

--------------------------------------------------------------------------------
map size : 8
58:0 59:0 60:0 63:0 64:0 65:0 66:0 67:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
16:777 58:0 59:0 60:0 63:0 64:0 65:0 66:0 67:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 8
58:0 59:0 60:0 63:0 64:0 65:0 66:0 67:0 
--------------------------------------------------------------------------------




TEST constructor(first, last)

--------------------------------------------------------------------------------
map size : 9
16:777 58:0 59:0 60:0 63:0 64:0 65:0 66:0 67:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 2
16:777 58:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 5
59:0 60:0 63:0 64:0 65:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
16:777 58:0 59:0 60:0 63:0 64:0 65:0 66:0 67:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
16:777 58:0 59:0 60:0 63:0 64:0 65:0 66:0 67:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 5
59:0 60:0 63:0 64:0 65:0 
--------------------------------------------------------------------------------




TEST copy constructor

--------------------------------------------------------------------------------
map size : 9
16:777 58:0 59:0 60:0 63:0 64:0 65:0 66:0 67:0 
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 9
16:777 58:0 59:0 60:0 63:0 64:0 65:0 66:0 67:0 
--------------------------------------------------------------------------------




TEST empty
empty_map.empty() : 1
map.empty() : 0
map_cp.empty() : 0
map_cp_cp.empty() : 0


TEST at
map.at(@) : 777
map.at(s) : 0
map.at(it_at->first) : 0


TEST []
map[@] : 777
map[s] : 0


TEST size - max_size
map.size() : 9
map.max_size() : 9
map_construct3.size() : 5
map_construct3.size() : 0
max size : 230584300921369395
max size : 230584300921369395
max size : 230584300921369395


TEST count
map.count(@) : 1
map.count(s) : 1
map.count(0) : 0
map.count(1) : 0


TEST equal_range()
map.equal_range(-10) first  : 58 58
map.equal_range(-10) second : 0 0
map.equal_range(0) first  : 16 16
map.equal_range(0) second : 777 777
map.equal_range(10) first  : 16 16
map.equal_range(10) second : 777 777
map.equal_range(-10) first  : 58 58
map.equal_range(-10) second : 0 0
map.equal_range(0) first  : 16 16
map.equal_range(0) second : 777 777
map.equal_range(10) first  : 16 16
map.equal_range(10) second : 777 777


TEST lower_bound()
map.lower_bound(-10) : 58 0
map.lower_bound(@) : 16 777
map.lower_bound(s) : 67 0
map.lower_bound(0) : 16 777
map.lower_bound(10) : 16 777


TEST upper_bound()
map.upper_bound(-10) : 58 0
map.upper_bound(@) : 58 0
map.upper_bound(r) : 67 0


TEST key_comp()
map.key_comp()(a, b) : 1
map.key_comp()(b, a) : 0
map.key_comp()(a, a) : 0
map.key_comp()(b, b) : 0
map.key_comp()(abcdefghijklmnopqrstuvwxyz, abcdefghijklmnopqrstuvwxyz1) : 1


TEST value_comp()
map.value_comp()(a, b) : 1
map.value_comp()(b, a) : 0


TEST relational operation
map2 == map3 : 1
map2 != map3 : 0
map2 < map3 : 0
map2 > map3 : 0
map2 <= map3 : 1
map2 >= map3 : 1
map2 == map3 : 0
map2 != map3 : 1
map2 < map3 : 1
map2 > map3 : 0
map2 <= map3 : 1
map2 >= map3 : 0
map2 == map3 : 0
map2 != map3 : 1
map2 < map3 : 1
map2 > map3 : 0
map2 <= map3 : 1
map2 >= map3 : 0


TEST clear

--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
map size : 0

--------------------------------------------------------------------------------


time : 0.008554sec
